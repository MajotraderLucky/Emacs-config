;; System-type definition
(defun system-is-linux()
  (string-equal system-type "gnu/linux"))
(defun system-is-windows()
  (string-equal system-type "windows-nt"))
;; Start Emacs as a server
(when (system-is-linux)
  (require 'server)
  (unless (server-running-p)
    (server-start))) ;; Запустить Emacs как сервер, если ОС - GNU/Linux
;; Unix path-variable
(when (system-is-linux)
  (setq unix-sbcl-bin          "/usr/bin/sbcl")
  (setq unix-init-path         "~/.emacs.d")
  (setq unix-init-ct-path      "~/.emacs.d/plugins/color-theme")
  (setq unix-init-ac-path      "~/.emacs.d/plugins/auto-complete")
  (setq unix-init-slime-path   "/usr/share/common-lisp/source/slime")
  (setq unix-init-ac-dict-path "~/.emacs.d/plugins/auto-complete/dict"))
;; My name and e-mail adress
(setq user-full-name   "%Sergey Ryazanov%")
(setq user-mail-adress "%ryazanov@majordomo.ru%")
;; Dired
(require 'dired)
(setq dired-recursive-deletes 'top) ;; чтобы можно было не пустые директории удалять...
;; Imenu
(require 'imenu)
(setq imenu-auto-rescan t)           ;; автоматически обновлять список функций в буфере
(setq imenu-use-popup-menu nil)      ;; диалоги Imenu только в минибуфере
(global-set-key (kbd "<f6>") 'imenu) ;; вызов Imenu на F6
;; Display the name of the current buffer in the title bar
(setq frame-title-format "GNU Emacs: %b")
;; Load path for plugins
(if (system-is-windows)
    (add-to-list 'load-path win-init-path)
  (add-to-list 'load-path unix-init-path))
;; Org-mode settings
(require 'org) ;; Вызвать org-mode
(global-set-key "\C-ca" 'org-agenda)   ;; определение клавиатурных комбинаций для внутренних
(global-set-key "\C-cb" 'org-iswitchb) ;; подрежимов org-mode
(global-set-key "\C-cl" 'org-store-link)
(add-to-list 'auto-mode-alist '("\\.org$" . Org-mode)) ;; ассоциируем *.org-файлы с org-mode
;; Inhibit startup/splash screen
(setq inhibit-splash-screen t)
(setq ingibit-startup-message t) ;; экран приветствия можно вызвать комбинацией C-h C-a
;; Show-paren-mode settings
(show-paren-mode t) ;; включить выделение выражений между {}, [], ()
;; Electric-modes settings
(electric-pair-mode t) ;; автозакрытие {}, [], () с переводом курсора внутрь скобок
(electric-indent-mode t) ;; отключить индентацию electric-indent-mod`ом (default in Emacs-24-4)
;; Delete selection
(delete-selection-mode t)
;; Disable GUI components
(tooltip-mode      -1)
(menu-bar-mode     -1) ;; отключаем графическое меню
(tool-bar-mode     -1) ;; отключаем tool-bar
(scroll-bar-mode   -1) ;; отключаем полосу прокрутки
(blink-cursor-mode -1) ;; курсор не мигает
(setq use-dialog-box     nil) ;; никаких графических диалогов и окон - всё через минибуфер
(setq redisplay-dont-pause t) ;; лучшая отрисовка буфера
(setq ring-bell-function 'ignore) ;;отключить звуковой сигнал
;; Disable backup/autosave files
(setq make-backup-files        nil)
(setq auto-save-default        nil)
(setq auto-save-list-file-name nil) ;; я так привык... хотите включить - замените nil на t
;; Coding-system settings
(set-language-environment 'UTF-8)
(if (system-is-linux) ;; для GNU/Linux кодировка utf-8, для MS Windows - windows-1251
    (progn
      (setq default-buffer-file-coding-system        'utf-8)
      (setq-default coding-system-for-read           'utf-8)
      (setq file-name-coding-system                  'utf-8)
      (set-selection-coding-system                   'utf-8)
      (set-keyboard-coding-system               'utf-8-unix)
      (set-terminal-coding-system                    'utf-8)))
;; Linum plugin
(require 'linum) ;; вызвать Linum
(line-number-mode   t) ;; показать номер строки в mode-line
(global-linum-mode  t) ;; показывать номера строк во всех буферах
(column-number-mode t) ;; показать номер столбца в mode-line
(setq linum-format " %d") ;; задаём формат нумерации строк
;; Fring settings
(fringe-mode '(8 . 0)) ;; ограничитель текста только слева
(setq-default indicate-empty-lines t) ;; отсутствие строки выделить глифами рядом с полосой с номером строки
(setq-default indicate-buffer-boundaries 'left) ;; индикация только слева
;; Display file size/time in mode-line
(setq display-time-24hr-format t) ;; 24-часовой временной формат в mode-line
(display-time-mode             t) ;; показывать часы в mode-line
(size-indication-mode          t) ;; размер файла в %-ах
;; Line wrapping
(setq word-wrap                t) ;; переносить по словам
(global-visual-line-mode       t)
;; Start window size
(when (window-system)
(set-frame-size (selected-frame)100 50))
;; IDO plugin
(require 'ido)
(ido-mode                      t)
(icomplete-mode                t)
(ido-everywhere                t)
(setq ido-virtual-buffers      t)
(setq ido-enable-flex-matching t)
;; Buffer Selection and ibuffer settings
(require 'bs)
(require 'ibuffer)
(defalias 'list-buffers 'ibuffer) ;; отдельный список буферов при нажатии C-x C-b
(global-set-key (kbd "<f2>")'bs-show) ;; запуск buffer selection кнопкой F2

;; Color-theme definition <http://www.emacswiki.org/emacs/ColorTheme>
(defun color-theme-init()
(require 'color-theme)
(color-theme-initialize)
(setq color-theme-is-global t)
(if (system-is-windows)
(when (file-directory-p win-init-ct-path)
(add-to-list 'load-path win-init-ct-path)
(color-theme-init))
(when (file-directory-p unix-init-ct-path)
(add-to-list 'load-path unix-init-ct-path)
(color-theme-init))))

;; Syntax highlighting
(require 'font-lock)
(global-font-lock-mode             t) ;; включено с версии Emacs-22. На всякий...
(setq font-lock-maximum-decoration t)
;; Indent settings
(setq-default indent-tabs-mode nil) ;; отключить возможность ставить отступы TAB'ом
(setq-default tab-width          4) ;; ширина табуляции - 4 пробельных символа
(setq-default c-basic-offset     4)
(setq-default standart-indent    4) ;; стандартная ширина отступа - 4 пробельных символа
(setq-default lisp-body-indent   4) ;; сдвигать Lisp-выражения на 4 пробельных символа
(global-set-key (kbd "RET") 'newline-and-indent) ;; при нажатии Enter перевести )
(setq lisp-indent-function 'common-lisp-indent-function)
;; Scrolling settings
(setq scroll-step               1) ;; вверх-вниз по 1 строке
(setq scroll-margin            10) ;; сдвигать буфер вверх/вниз когда курсор в 10 шагах от верхней/нижней границы
(setq scroll-conservatively 10000)
;; Short message
(defalias 'yes-or-no-p 'y-or-n-p)
;; Clipboard settings
(setq x-select-enable-clipboard t)
;; End of file newlines
(setq require-final-newline    t) ;; добавлять новую пустую строку в конец файла при сохранении
(setq next-line-add-newlines nil) ;; не добавлять новую строку в конец при смещении 
                                  ;; курсора стрелками
;; Highlight search resaults
(setq search-highlight        t)
(setq query-replace-highlight t)
;; Easy transition between buffers: M-arrow-keys
(if (equal nil (equal major-mode 'org-mode))
    (windmove-default-keybindings 'meta))

;; Delete trailing whitespaces, format buffer and untabify when save buffer
(defun format-current-buffer()
    (indent-region (point-min) (point-max)))
(defun untabify-current-buffer()
    (if (not indent-tabs-mode)
        (untabify (point-min) (point-max)))
    nil)
(add-to-list 'write-file-functions 'format-current-buffer)
(add-to-list 'write-file-functions 'untabify-current-buffer)
(add-to-list 'write-file-functions 'delete-trailing-whitespace)
